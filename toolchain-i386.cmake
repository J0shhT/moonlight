cmake_minimum_required(VERSION 3.20.1)

set(CMAKE_SYSTEM_NAME Generic)
set(CMAKE_SYSTEM_PROCESSOR i686)
set(CMAKE_SYSROOT "/mnt/c/dev/os/moonlight/sysroot")

set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)

set(ARCH i386 CACHE STRING "Platform architecture for the build")
set(TOOLS "/opt/cross")
set(TOOLS_PREFIX i686-elf-)

# C Compiler Configuration
set(CMAKE_C_COMPILER ${TOOLS}/bin/${TOOLS_PREFIX}gcc)
set(CMAKE_C_COMPILER_ID GNU)
set(CMAKE_C_COMPILER_WORKS TRUE)
set(CMAKE_C_FLAGS_INIT "-isystem=/usr/include -std=gnu11 -Wall -Wextra")
set(CMAKE_C_FLAGS_DEBUG_INIT "-O0 -gdwarf -g3 -DDEBUG")
set(CMAKE_C_FLAGS_RELEASE_INIT "-O2 -DNDEBUG")

# C++ Compiler Configuration
# set(CMAKE_CXX_COMPILER ${TOOLS}/bin/${TOOLS_PREFIX}g++)
# set(CMAKE_CXX_COMPILER_ID ${CMAKE_C_COMPILER_ID})
set(CMAKE_CXX_COMPILER_WORKS TRUE)
set(CMAKE_CXX_FLAGS_INIT ${CMAKE_C_FLAGS_INIT})
set(CMAKE_CXX_FLAGS_DEBUG_INIT ${CMAKE_C_FLAGS_DEBUG_INIT})
set(CMAKE_CXX_FLAGS_RELEASE_INIT ${CMAKE_C_FLAGS_RELEASE_INIT})

# NASM Assembler Configuration
set(CMAKE_ASM_NASM_COMPILER nasm)
set(CMAKE_ASM_NASM_FLAGS_INIT "-felf32")
set(CMAKE_ASM_NASM_FLAGS_DEBUG_INIT "-O0 -g -Fdwarf -DDEBUG")
set(CMAKE_ASM_NASM_FLAGS_RELEASE_INIT "-O2 -DNDEBUG")
set(CMAKE_ASM_NASM_COMPILE_OBJECT "<CMAKE_ASM_NASM_COMPILER> <INCLUDES> <FLAGS> -o <OBJECT> <SOURCE>")
set(CMAKE_ASM_NASM_LINK_EXECUTABLE "${TOOLS}/bin/${TOOLS_PREFIX}ld <CMAKE_ASM_NASM_LINK_FLAGS> <LINK_FLAGS> <OBJECTS> -o <TARGET> <LINK_LIBRARIES>")

set(LINKER_LANGUAGE C)
set(CMAKE_TRY_COMPILE_TARGET_TYPE "STATIC_LIBRARY")